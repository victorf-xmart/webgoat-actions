name: Run XGuardian Scanning

on:
  push:
    branches:
      - main

jobs:
  xguardian-scan:
    runs-on: ubuntu-latest

    env:
      API_EMAIL: ${{ secrets.API_EMAIL }}
      API_PASSWORD: ${{ secrets.API_PASSWORD }}
      API_TOKEN: ${{ secrets.API_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      APP_NAME: ${{ github.event.repository.name }}
      TEAM_ID: "id-do-seu-time"
      SCAN_VERSION: "nome-do-seu-scan"
      FILE_TYPE: "application/zip"
      UPLOAD_URL: "nome-da-url"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Login to API and store token
        run: |
          response=$(curl -X 'POST' 'https://auth.xguardianplatform.io/login' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
              "email": "'"${API_EMAIL}"'",
              "password": "'"${API_PASSWORD}"'"
            }' | jq -r '.token')

          if [ -n "$response" ] && [ "$response" != "null" ]; then
            echo "API_TOKEN=$response" >> $GITHUB_ENV
          else
            echo "Failed to obtain token"
            exit 1
          fi

      - name: Create application
        run: |
          curl -X POST 'https://uploader-mvp.xguardianplatform.io/create_app' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
              "token": "'"${API_TOKEN}"'",
              "app_name": "'"${APP_NAME}"'",
              "team_id": ["'"${TEAM_ID}"'"],
              "languages": ["Node.js"],
              "description": "App description",
              "policy": 0
            }'

      - name: Zip project files
        run: |
          zip -r "${APP_NAME}.zip" .

      - name: Upload files
        run: |
          curl --request PUT "${UPLOAD_URL}" \
            --header "Content-Type: application/zip" \
            --data-binary @"${APP_NAME}.zip"
